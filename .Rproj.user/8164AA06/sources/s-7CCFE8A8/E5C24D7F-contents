source("parallel_sampling_tools.R")

seed <- 2020
reps <- 16
dims <- c(2, 3, 5, 10, 15, 20, 25, 30, 40, 50)

settings <- data.table(
  method_name = c(
    'Geweke',
    'MET',
    'RHMC',
    'Exact',
    'HMC',
    'ESS',
    'TGS',
    'GHK',
    'LG2015',
    'RSM',
    'RY2004',
    'STMVN',
    'Ben2016'
  ),
  sample_call = c(
    sample_geweke,
    sample_met,
    sample_rhmc,
    sample_exact,
    sample_hmc,
    sample_ess,
    sample_tgs,
    sample_ghk,
    sample_lg2015,
    sample_rsm,
    sample_ry2004,
    sample_stmvn,
    sample_ben2016
  ),
  parameters = list(
    list(burnin = 1000),
    list(p=NA),
    list(traj_length = 2, cov_type = "full"),
    list(p=NA),
    list(burnin = 1000),
    list(p=NA),
    list(burnin = 1000),
    list(p=NA),
    list(burnin = 1000),
    list(p=NA),
    list(burnin = 1000),
    list(sharpness = 10, burnin = 1000),
    list(burnin = 1000)
  )
)

muf <- function(d) rep(0, d)
Sigmaf <- function(d) solve(.5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d)))
lbf <- function(d) rep(.5, d)
ubf <- function(d) rep(1, d)
n <- 10000
dimensions <- c(2, 3, 5, 10, 15, 20, 25, 30, 40, 50)

savepath <- "data/fernandez_small_sampling"

benchmarks <- run_parallel_benchmarks(settings, n, dimensions, 
                                      muf, Sigmaf, lbf, ubf, 
                                      coda_ess = TRUE, mean_est = TRUE,
                                      threads = 8, savepath = savepath, seed = seed)