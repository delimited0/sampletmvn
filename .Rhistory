library(sampletmvn)
?rnorm
mode
map
opt
library(sampletmvn)
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
ub = rep(Inf, d)
A = diag(d)
sample_rsm(n, mu, Sigma, lb, ub, A)
sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
n = 100
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
ub = rep(Inf, d)
A = diag(d)
sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
library(sampletmvn)
n = 100
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
ub = rep(Inf, d)
A = diag(d)
sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
sample_rsm = function(n, mu, Sigma, lb, ub, A) {
d = length(mu)
Prec = chol2inv(chol(Sigma))
Amat = rbind(A, -A)
bvec = c(lb, -ub)
dvec = rep(0, 2*d)
opt = quadprog::solve.QP(Prec, dvec = dvec, Amat, bvec)
map = opt$solution
Prec_mode = Prec %*% map
rsm(n, map, Sigma, Prec_mode, lb, ub, A)
}
sample_rsm = function(n, mu, Sigma, lb, ub, A) {
d = length(mu)
Prec = chol2inv(chol(Sigma))
Amat = rbind(A, -A)
bvec = c(lb, -ub)
dvec = rep(0, 2*d)
browser()
opt = quadprog::solve.QP(Prec, dvec = dvec, Amat, bvec)
map = opt$solution
Prec_mode = Prec %*% map
rsm(n, map, Sigma, Prec_mode, lb, ub, A)
}
sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
sample_rsm
sample_rsm(n, mu, Sigma, lb, ub, A)
dvec
Amat
bvec
quadprog::solve.QP(Prec, dvec = dvec, Amat, bvec)
Prec
#' @export
sample_rsm = function(n, mu, Sigma, lb, ub, A) {
d = length(mu)
Prec = chol2inv(chol(Sigma))
Amat = rbind(A, -A)
bvec = c(lb, -ub)
dvec = rep(0, d)
opt = quadprog::solve.QP(Prec, dvec, Amat, bvec)
map = opt$solution
Prec_mode = Prec %*% map
rsm(n, map, Sigma, Prec_mode, lb, ub, A)
}
sample_rsm(n, mu, Sigma, lb, ub, A)
#' @export
sample_rsm = function(n, mu, Sigma, lb, ub, A) {
d = length(mu)
Prec = chol2inv(chol(Sigma))
Amat = t(rbind(A, -A))
bvec = c(lb, -ub)
dvec = rep(0, d)
opt = quadprog::solve.QP(Prec, dvec, Amat, bvec)
map = opt$solution
Prec_mode = Prec %*% map
rsm(n, map, Sigma, Prec_mode, lb, ub, A)
}
sample_rsm(n, mu, Sigma, lb, ub, A)
#' @export
sample_rsm = function(n, mu, Sigma, lb, ub, A) {
d = length(mu)
Prec = chol2inv(chol(Sigma))
Amat = - t(rbind(A, -A))
bvec = c(lb, -ub)
dvec = rep(0, d)
opt = quadprog::solve.QP(Prec, dvec, Amat, bvec)
map = opt$solution
Prec_mode = Prec %*% map
rsm(n, map, Sigma, Prec_mode, lb, ub, A)
}
sample_rsm(n, mu, Sigma, lb, ub, A)
Dmat <- matrix(0,3,3)
diag(Dmat) <- 1
dvec <- c(0,5,0)
Amat <- matrix(c(-4,-3,0,2,1,0,0,-2,1),3,3)
bvec <- c(-8,2,0)
solve.QP(Dmat,dvec,Amat,bvec=bve
solve.QP(Dmat,dvec,Amat,bvec=bvec)
solve.QP(Dmat,dvec,Amat,bvec=bvec)
quadprog::solve.QP(Dmat,dvec,Amat,bvec=bvec)
Dmat
dvec
Amat
bvec
#' @export
sample_rsm = function(n, mu, Sigma, lb, ub, A) {
d = length(mu)
Prec = chol2inv(chol(Sigma))
Amat = - t(rbind(A, -A))
bvec = c(lb, -ub)
dvec = rep(0, d)
browser()
opt = quadprog::solve.QP(Prec, dvec, Amat, bvec)
map = opt$solution
Prec_mode = Prec %*% map
rsm(n, map, Sigma, Prec_mode, lb, ub, A)
}
sample_rsm(n, mu, Sigma, lb, ub, A)
Amat
dbec
dvec
bvec
quadprog::solve.QP(Prec, dvec, Amat, bvec)
Prec
t(Amat)
bvec
A
lb
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
A = diag(d)
sample_rsm(n, mu, Sigma, lb, ub, A)
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
A = diag(d)
sample_rsm(n, mu, Sigma, lb, ub, A)
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
sample_rsm(n, mu, Sigma, lb, ub, A)
Amat
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
n = 100
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
A = diag(d)
sample_rsm(n, mu, Sigma, lb, ub, A)
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
sample_rsm(n, mu, Sigma, lb, ub, A)
rsm_samples = sample_rsm(n, mu, Sigma, lb, ub, A)
rsm_samples
plot(rsm_samples)
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
library(sampletmvn)
n = 100
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
A = diag(d)
rsm_samples = sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
rsm_samples
plot(rsm_samples)
sampletmvn::rtuvn(100, 0, 1, -1, 1)
library(sampletmvn)
sampletmvn::rtuvn(100, 0, 1, -1, 1)
hist(sampletmvn::rtuvn(100, 0, 1, -1, 1))
hist(tmvmixnorm::rtuvn(100, 0, 1, -1, 1))
