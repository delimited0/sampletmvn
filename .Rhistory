#' @export
sample_rsm = function(n, mu, Sigma, lb, ub, A) {
d = length(mu)
Prec = chol2inv(chol(Sigma))
Amat = - t(rbind(A, -A))
bvec = c(lb, -ub)
dvec = rep(0, d)
opt = quadprog::solve.QP(Prec, dvec, Amat, bvec)
map = opt$solution
Prec_mode = Prec %*% map
rsm(n, map, Sigma, Prec_mode, lb, ub, A)
}
sample_rsm(n, mu, Sigma, lb, ub, A)
Dmat <- matrix(0,3,3)
diag(Dmat) <- 1
dvec <- c(0,5,0)
Amat <- matrix(c(-4,-3,0,2,1,0,0,-2,1),3,3)
bvec <- c(-8,2,0)
solve.QP(Dmat,dvec,Amat,bvec=bve
solve.QP(Dmat,dvec,Amat,bvec=bvec)
solve.QP(Dmat,dvec,Amat,bvec=bvec)
quadprog::solve.QP(Dmat,dvec,Amat,bvec=bvec)
Dmat
dvec
Amat
bvec
#' @export
sample_rsm = function(n, mu, Sigma, lb, ub, A) {
d = length(mu)
Prec = chol2inv(chol(Sigma))
Amat = - t(rbind(A, -A))
bvec = c(lb, -ub)
dvec = rep(0, d)
browser()
opt = quadprog::solve.QP(Prec, dvec, Amat, bvec)
map = opt$solution
Prec_mode = Prec %*% map
rsm(n, map, Sigma, Prec_mode, lb, ub, A)
}
sample_rsm(n, mu, Sigma, lb, ub, A)
Amat
dbec
dvec
bvec
quadprog::solve.QP(Prec, dvec, Amat, bvec)
Prec
t(Amat)
bvec
A
lb
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
A = diag(d)
sample_rsm(n, mu, Sigma, lb, ub, A)
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
A = diag(d)
sample_rsm(n, mu, Sigma, lb, ub, A)
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
sample_rsm(n, mu, Sigma, lb, ub, A)
Amat
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
n = 100
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
A = diag(d)
sample_rsm(n, mu, Sigma, lb, ub, A)
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
sample_rsm(n, mu, Sigma, lb, ub, A)
rsm_samples = sample_rsm(n, mu, Sigma, lb, ub, A)
rsm_samples
plot(rsm_samples)
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
source("~/Research/mvn_region/sampletmvn/R/samplers.R")
library(sampletmvn)
n = 100
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
A = diag(d)
rsm_samples = sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
rsm_samples
plot(rsm_samples)
sampletmvn::rtuvn(100, 0, 1, -1, 1)
library(sampletmvn)
sampletmvn::rtuvn(100, 0, 1, -1, 1)
hist(sampletmvn::rtuvn(100, 0, 1, -1, 1))
hist(tmvmixnorm::rtuvn(100, 0, 1, -1, 1))
library(sampletmvn)
n = 10000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(-2, d)
ub = rep(2, d)
A = diag(d)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
2, init = c(0, 0))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(0, 0))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(0, 0))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
n = 1000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
ub = rep(Inf, d)
A = diag(d)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
lb
A
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(n, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
hzz_samples
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
hzz_sam
hzz_samples
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(2, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
hzz_samples
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(2, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = .5, init = c(1, 1))
hzz_samples
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(100, mu, Sigma, lb, ub, A,
intg_time = .5, init = c(1, 1))
hzz_samples
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = .5, init = c(1, 1))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 3, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 3, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 3, init = c(1, 1))
n = 10000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(-2, d)
ub = rep(2, d)
A = diag(d)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
foo = benchmarkme::benchmark_std()
plot(foo)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 2, init = c(1, 1))
n = 1000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
ub = rep(Inf, d)
A = diag(d)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 3, init = c(1, 1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 3,
init = c(1, 1), p_init = c(1, 1))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 3,
init = c(1, 1), p_init = c(-1, 1))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = .3,
init = c(1, 1), p_init = c(.1, .1))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 1,
init = c(1, 1), p_init = c(.1, .1))
library(sampletmvn)
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(1, mu, Sigma, lb, ub, A,
intg_time = 1,
init = c(1, 1), p_init = c(.1, .1))
hzz_samples = sampletmvn::sample_hamiltonian_zigzag(10, mu, Sigma, lb, ub, A,
intg_time = 1,
init = c(1, 1), p_init = c(.1, .1))
hzz_samples
library(hccmvn)
# Due to historical reason, n should be equal to m * 2^{int}
set.seed(123)
n <- 1024
m <- 32
d <- 4
locs <- cbind(kronecker((1 : m) / m, rep(1, m)),
kronecker(rep(1, m), (1 : m) / m))
covM <- exp(- rdist(locs) / 0.3)
a <- -runif(n) * m
b <- runif(n) * m
install.packages("fields")
set.seed(123)
n <- 1024
m <- 32
d <- 4
locs <- cbind(kronecker((1 : m) / m, rep(1, m)),
kronecker(rep(1, m), (1 : m) / m))
covM <- exp(- rdist(locs) / 0.3)
a <- -runif(n) * m
b <- runif(n) * m
library(fields)
set.seed(123)
n <- 1024
m <- 32
d <- 4
locs <- cbind(kronecker((1 : m) / m, rep(1, m)),
kronecker(rep(1, m), (1 : m) / m))
covM <- exp(- rdist(locs) / 0.3)
a <- -runif(n) * m
b <- runif(n) * m
odr <- recurUniandBlkcmb(covM = covM, a = a, b = b, bsz_ = m)
locs <- locs[odr, ]
covM <- exp(- rdist(locs))
diag(covM) <- diag(covM)
a <- a[odr]
b <- b[odr]
p <- hccmvn::hccmvn(covM, a, b, m, d, 1e-4)
p
install.packages("tmvmixnorm")
library(sampletmvn)
library(sampletmvn)
n = 10000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(-2, d)
ub = rep(2, d)
A = diag(d)
gibbs_mr_samples = sampletmvn::sample_gibbs_mixed_rejection(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0)
plot(gibbs_mr_samples)
n = 1000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
ub = rep(Inf, d)
A = diag(d)
rsm_samples = sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
plot(rsm_samples)
gibbs_mr_samples = sampletmvn::sample_gibbs_mixed_rejection(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0)
plot(gibbs_mr_samples)
install.packages("quadprog")
n = 1000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
ub = rep(Inf, d)
A = diag(d)
rsm_samples = sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
plot(rsm_samples)
gibbs_mr_samples = sampletmvn::sample_gibbs_mixed_rejection(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0)
plot(gibbs_mr_samples)
library(sampletmvn)
library(sampletmvn)
library(sampletmvn)
n = 10000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(-2, d)
ub = rep(2, d)
A = diag(d)
rsm_samples = sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
plot(rsm_samples)
gibbs_mr_samples = sampletmvn::sample_gibbs_mixed_rejection(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0)
plot(gibbs_mr_samples)
library(sampletmvn)
n = 10000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(-2, d)
ub = rep(2, d)
A = diag(d)
rsm_samples = sampletmvn::sample_rsm(n, mu, Sigma, lb, ub, A)
plot(rsm_samples)
gibbs_mr_samples = sampletmvn::sample_gibbs_mixed_rejection(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0)
plot(gibbs_mr_samples)
gibbs_mr_samples = sampletmvn::sample_gibbs_lg2015(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0)
plot(gibbs_mr_samples)
gibbs_mr_samples = sampletmvn::sample_gibbs_lg2015(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_mr_samples)
gibbs_mr_samples = sampletmvn::sample_gibbs_lg2015(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "be2017")
plot(gibbs_mr_samples)
library(sampletmvn)
n = 1000
d = 2
muf <- function(d) rep(0, d)
Sigmaf <- function(d) diag(d)
lbf <- function(d) rep(-Inf, 2*d)
ubf <- function(d) c(0, rep(2, 2*d-1))
Af <- function(d) {
lower_bounds <- -diag(d)
upper_bounds <- diag(d)
upper_bounds[1, ] <- c(2, 1, rep(0, d-2))
A <- rbind(upper_bounds, lower_bounds)
return(A)
}
mu = muf(d)
Sigma = Sigmaf(d)
lb = lbf(d)
ub = ubf(d)
A = Af(d)
Sigma
n = 10000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(-2, d)
ub = rep(2, d)
A = diag(d)
eigen(Sigma)
eigen(Sigma)$vectors
Q = eigen(Sigma)$vectors
Q
Q %*% Sigma %*% t(Q)
Q %*% Sigma %*% Q
t(Q) %*% Sigma %*% Q
solve(Q) %*% Sigma %*% Q
R = chol(Sigma)
R
Rinv = solve(R)
solve(t(R))
Q = solve(t(R))
Q %*% Sigma %*% t(Q)
alpha
library(sampletmvn)
n = 10000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(-2, d)
ub = rep(2, d)
A = diag(d)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
library(sampletmvn)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
library(sampletmvn)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
final.ind
length(final.ind)
dim(samples)
L %*% samples[, final.ind] + mu
final.ind
max(final.ind)
library(sampletmvn)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_ry2004_samples)
lb
ub
n = 1000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
ub = rep(Inf, d)
A = diag(d)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_ry2004_samples)
library(sampletmvn)
n = 10000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(-2, d)
ub = rep(2, d)
A = diag(d)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_ry2004_samples)
n = 1000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(0, d)
ub = rep(Inf, d)
A = diag(d)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_ry2004_samples)
library(sampletmvn)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_ry2004_samples)
library(sampletmvn)
library(sampletmvn)
library(sampletmvn)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_ry2004_samples)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "be2017")
plot(gibbs_ry2004_samples)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_ry2004_samples)
gibbs_mr_samples = sampletmvn::sample_gibbs_mixed_rejection(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0)
plot(gibbs_mr_samples)
gibbs_mr_samples = sampletmvn::sample_gibbs_lg2015(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0)
plot(gibbs_mr_samples)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_ry2004_samples)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "be2017")
plot(gibbs_ry2004_samples)
library(sampletmvn)
n = 10000
d = 2
mu = rep(0, d)
Sigma = .5 * diag(d) + .5 * rep(1, d) %*% t(rep(1, d))
lb = rep(-2, d)
ub = rep(2, d)
A = diag(d)
gibbs_ry2004_samples = sampletmvn::sample_gibbs_ry2004(n, mu, Sigma, A, lb, ub,
init = c(1, 1), thin = 0,
tuvn_sampler = "lg2015")
plot(gibbs_ry2004_samples)
